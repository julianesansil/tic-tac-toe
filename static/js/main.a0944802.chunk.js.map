{"version":3,"sources":["components/home/GameEnvironment/GameSection/TicTacToe/types.ts","theme/index.ts","styles/index.ts","assets/images/SWORD_Health_logo.svg","components/common/Typography.tsx","components/layout/Container.tsx","components/layout/Header/styles.ts","components/layout/Header/index.tsx","assets/images/send.svg","assets/images/facebook.svg","constants/companyInformation.ts","assets/images/instagram.svg","assets/images/twitter.svg","constants/profileInformation.ts","assets/images/profile_photo.jpg","components/common/Input.tsx","components/common/Button.tsx","components/common/InputGroupButton.tsx","components/layout/Footer/styles.ts","components/layout/Footer/index.tsx","components/home/ProfileSection/styles.ts","components/home/ProfileSection/index.tsx","context/GameHistoryContext.ts","assets/images/X_dark.svg","assets/images/O_dark.svg","helpers/timeHelper.ts","assets/images/X_bright.svg","assets/images/O_bright.svg","components/home/GameEnvironment/GameSection/TicTacToe/Square.tsx","components/home/GameEnvironment/GameSection/TicTacToe/index.tsx","components/home/GameEnvironment/GameSection/styles.ts","components/home/GameEnvironment/GameSection/index.tsx","components/home/GameEnvironment/GameStatisticsSection/styles.ts","components/home/GameEnvironment/GameStatisticsSection/index.tsx","constants/game.ts","components/home/GameEnvironment/index.tsx","pages/Home.tsx","pages/App.tsx","index.tsx"],"names":["ValueOption","defaultTheme","colors","blue","green","red","yellow","white","grey","lighGrey","darkGrey","newGrey","greyAlpha60","fonts","lineHeight","body","spaced","GlobalStyle","createGlobalStyle","resetCSS","props","theme","VARIANT_MAPPING","h1","h2","h3","h4","h5","h6","title","subtitle1","subtitle2","Typography","useContext","ThemeContext","children","variant","fontColor","fontSize","fontStyle","textAlign","margin","style","color","fontWeight","top","right","bottom","left","React","createElement","Container","styled","div","FixedContainer","isTransparentBackground","FlexContainer","Header","useState","setIsTransparentBackground","useEffect","handleScroll","scrollY","window","addEventListener","removeEventListener","as","src","SWORDLogo","alt","height","COMPANY_INFORMATION","phone","address","socialMedia","name","url","logo","FacebookLogo","PROFILE_INFORMATION","photo","age","location","ocupation","linkedIn","about","Input","input","width","Button","button","backgroundColor","selected","icon","InputGroupButton","inputProps","buttonProps","Column","Center","SocialMedia","Title","attrs","Text","Footer","emailToSubscribe","setEmailToSubscribe","map","media","href","target","rel","onSubmit","event","preventDefault","alert","type","placeholder","value","onChange","SendIcon","length","Column1","Column2","Avatar","img","SpacedText","ProfileSection","split","paragraph","substring","GameHistoryContext","createContext","info","winnersPerMatch","scoreBoard","P1","P2","tie","totalSeconds","setInfo","resetContext","useGameHistory","hourCounter","Math","floor","minuteCounter","secondCounter","hours","String","minutes","seconds","isHighlighted","undefined","Square","disabled","onClick","X","XBrightIcon","XDarkIcon","O","OBrightIcon","ODarkIcon","Grid","size","TicTacToe","gameHistoryContext","newGame","gridSize","setIsPlaying","grid","setGrid","currentValue","setCurrentValue","winningMove","setWinningMove","counter","useRef","clearGame","Array","fill","current","endMatch","winner","message","setTimeout","handleSquareClick","rowPosition","columnPosition","row","square","matchOver","checkRows","checkColumns","checkDiagonal1","checkDiagonal2","i","winningDirection","direction","calculateCurrentResult","isSquareHighlighted","LayoutContainer","Block","order","PlayersArea","GameArea","TimerArea","Playing","PlayerLabel","PlayerScoreValue","GAME_INFO","0","1","2","GameSection","resetNextMatch","initialTimer","selectedGame","setSelectedGame","isPlaying","timer","setTimer","intervalRef","counterRef","setInterval","TimeHelper","clearInterval","renderGameTab","gameId","game","Flex","GameHistory","PlayersInfo","Subtitle","PlayerPercentage","VL","Bagde","CheckMark","checked","GameStatisticsSection","forwardRef","ref","matchsCounter","playedMatchs","setPlayedMatchs","winners","setWinners","index","renderPercentageBadge","player","isVictoryBadge","victoriesPercentage","calculateVictoriesPercentage","oneThird","GameEnvironment","newGameHistory","gameHistory","setGameHistory","setResetNextMatch","statisticsSectionRef","scrollIntoView","endGame","Provider","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0944802.chunk.js","sourcesContent":["enum ValueOption {\n  X = 'X',\n  O = 'O',\n}\n\nexport default ValueOption;\n","const defaultTheme = {\n  colors: {\n    blue: '#37A8EE',\n    green: '#00DCA4',\n    red: '#FF6961',\n    yellow: '#F1C40F',\n    white: '#FFFFFF',\n\n    grey: '#D8D8D8',\n    lighGrey: '#F6F8F9',\n    darkGrey: '#2C2E30',\n    newGrey: '#808080',\n\n    greyAlpha60: '#D8D8D899', // RRGGBBAA\n  },\n  fonts: 'GlacialIndifference, sans-serif',\n  lineHeight: {\n    body: 1,\n    spaced: 1.5,\n  },\n};\n\nexport type ThemeType = typeof defaultTheme;\nexport type ThemeColors = keyof typeof defaultTheme.colors;\nexport type ThemeLineHeight = keyof typeof defaultTheme.lineHeight;\n\nexport default defaultTheme;\n","import { createGlobalStyle } from 'styled-components';\nimport fonts from './fonts.css';\nimport resetCSS from './reset.css';\n\nconst GlobalStyle = createGlobalStyle`\n  ${fonts}\n  ${resetCSS}\n\n  html {\n    scroll-behavior: smooth;\n  }\n\n  body, button, input {\n    font-family: ${props => props.theme.fonts};\n    font-size: 16px;\n  }\n`;\n\nexport default GlobalStyle;\n","export default __webpack_public_path__ + \"static/media/SWORD_Health_logo.4dc379b5.svg\";","import React, { CSSProperties, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { ThemeColors, ThemeLineHeight } from 'theme/index';\n\nexport interface TypographyProps {\n  children: React.ReactNode;\n\n  variant?: keyof typeof VARIANT_MAPPING;\n  fontColor?: ThemeColors;\n  lineHeight?: ThemeLineHeight;\n\n  fontSize?: CSSProperties['fontSize'];\n  fontStyle?: CSSProperties['fontStyle'] | 'bold';\n  textAlign?: CSSProperties['textAlign'];\n  margin?: { top?: string; bottom?: string; right?: string; left?: string };\n}\n\nconst VARIANT_MAPPING = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  title: 'h1',\n  subtitle1: 'h2',\n  subtitle2: 'h3',\n  body: 'p',\n};\n\nconst Typography = (props: TypographyProps): React.ReactElement => {\n  const theme = useContext(ThemeContext);\n  const {\n    children,\n\n    variant = 'body',\n    fontColor = 'darkGrey',\n    lineHeight = 'body',\n\n    fontSize,\n    fontStyle,\n    textAlign,\n    margin,\n  } = props;\n\n  const style = {\n    fontSize,\n    textAlign,\n\n    color: theme.colors[fontColor],\n    lineHeight: theme.lineHeight[lineHeight],\n\n    ...(fontStyle === 'bold' && { fontWeight: 'bold' }),\n    ...(fontStyle === 'italic' && { fontStyle: 'italic' }),\n    ...(margin && {\n      margin: `${margin.top || 0} ${margin.right || 0} ${margin.bottom || 0} ${\n        margin.left || 0\n      }`,\n    }),\n  };\n\n  return React.createElement(VARIANT_MAPPING[variant], { style }, children);\n};\n\nexport default Typography;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 54px 5%;\n\n  @media (min-width: 1200px) {\n    padding-left: calc((100% - 992px) / 2);\n    padding-right: calc((100% - 992px) / 2);\n  }\n\n  @media (min-width: 1400px) {\n    padding-left: calc((100% - 1200px) / 2);\n    padding-right: calc((100% - 1200px) / 2);\n  }\n`;\n\nexport default Container;\n","import styled from 'styled-components';\nimport Container from '../Container';\n\nexport const FixedContainer = styled.div<{ isTransparentBackground: boolean }>`\n  position: sticky;\n  top: 0;\n  left: 0;\n  width: 100%;\n\n  background-color: ${props =>\n    props.isTransparentBackground\n      ? props.theme.colors.greyAlpha60\n      : props.theme.colors.grey};\n  transition: background-color 0.7s ease;\n`;\n\nexport const FlexContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  @media (min-width: 340px) {\n    flex-direction: row;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\n\nimport SWORDLogo from 'assets/images/SWORD_Health_logo.svg';\nimport Typography from 'components/common/Typography';\nimport { FixedContainer, FlexContainer } from './styles';\n\nconst Header = (): React.ReactElement => {\n  const [isTransparentBackground, setIsTransparentBackground] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const { scrollY } = window;\n      if (scrollY > 150) {\n        setIsTransparentBackground(true);\n      } else {\n        setIsTransparentBackground(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <FixedContainer\n      as=\"header\"\n      isTransparentBackground={isTransparentBackground}\n    >\n      <FlexContainer>\n        <img src={SWORDLogo} alt=\"SWORD Health logo\" height=\"46px\" />\n\n        <div>\n          <Typography variant=\"subtitle1\" fontStyle=\"bold\" textAlign=\"end\">\n            Frontend Developer\n          </Typography>\n\n          <Typography\n            variant=\"body\"\n            fontStyle=\"italic\"\n            textAlign=\"end\"\n            margin={{ top: '4px' }}\n          >\n            Challenge\n          </Typography>\n        </div>\n      </FlexContainer>\n    </FixedContainer>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/send.7411461b.svg\";","export default __webpack_public_path__ + \"static/media/facebook.31ef16dd.svg\";","import FacebookLogo from 'assets/images/facebook.svg';\nimport InstagramLogo from 'assets/images/instagram.svg';\nimport TwitterLogo from 'assets/images/twitter.svg';\n\nconst COMPANY_INFORMATION = {\n  phone: '(+351) 123 456 789',\n  address: 'Rua Sá da Bandeira, 111, Porto',\n  socialMedia: [\n    {\n      name: 'Instagram',\n      url: 'https://www.instagram.com/sword_health',\n      logo: InstagramLogo,\n    },\n    {\n      name: 'Facebook',\n      url: 'https://www.facebook.com/SWORDHealth1',\n      logo: FacebookLogo,\n    },\n    {\n      name: 'Twitter',\n      url: 'https://twitter.com/swordhealth',\n      logo: TwitterLogo,\n    },\n  ],\n};\n\nexport default COMPANY_INFORMATION;\n","export default __webpack_public_path__ + \"static/media/instagram.172f3110.svg\";","export default __webpack_public_path__ + \"static/media/twitter.b80161ac.svg\";","import ProfilePhoto from 'assets/images/profile_photo.jpg';\n\nconst PROFILE_INFORMATION = {\n  photo: ProfilePhoto,\n  name: 'Juliane Silva',\n  age: 29,\n  location: 'Porto, Porto',\n  ocupation: 'Frontend Developer',\n  linkedIn: {\n    name: '@jlsansil',\n    url: 'https://www.linkedin.com/in/jlsansil',\n  },\n  about: `I'm from Brazil, and I've been here in Porto since December last year.\\n\n  I've been working with software development since 2015. I've worked with AngularJS and React Native on the frontend and with Node.js and Java on the backend; and, I'm currently working on a React project.\\n\n  I already had a startup, with the objective of helping in the treatment of autistic children, but it closed down. ^^' But I still hope to help people through my work.`,\n};\n\nexport default PROFILE_INFORMATION;\n","export default __webpack_public_path__ + \"static/media/profile_photo.0667139e.jpg\";","import { CSSProperties } from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps {\n  width?: CSSProperties['width'];\n}\n\nconst Input = styled.input<InputProps>`\n  height: 18px;\n  width: ${props => props.width};\n  padding: 4px 8px;\n  border: solid 1px ${props => props.theme.colors.grey};\n  font-size: 13px;\n\n  ::placeholder {\n    color: ${props => props.theme.colors.grey};\n  }\n`;\n\nexport default Input;\n","import { ButtonHTMLAttributes } from 'react';\nimport styled from 'styled-components';\nimport { ThemeColors } from 'theme';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  icon?: boolean;\n  selected?: boolean;\n  backgroundColor?: ThemeColors;\n}\n\nconst Button = styled.button<ButtonProps>`\n  background-color: ${props =>\n    props.theme.colors[\n      props.backgroundColor || (props.selected ? 'newGrey' : 'white')\n    ]};\n  border: none;\n  color: ${props =>\n    props.selected ? props.theme.colors.white : props.theme.colors.darkGrey};\n  cursor: pointer;\n\n  ${props =>\n    props.icon\n      ? `height: 28px;`\n      : `\n        height: 32px;\n        padding: 0 16px;\n        border-radius: 4px;\n      `};\n`;\n\nexport default Button;\n","import React, { InputHTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\nimport Input from './Input';\nimport Button, { ButtonProps } from './Button';\n\ninterface InputGroupButtonProps {\n  inputProps: InputHTMLAttributes<HTMLInputElement>;\n  buttonProps: ButtonProps;\n}\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst InputGroupButton = (props: InputGroupButtonProps): React.ReactElement => {\n  const { inputProps, buttonProps } = props;\n\n  return (\n    <FlexContainer>\n      <Input {...inputProps} />\n      <Button icon {...buttonProps} />\n    </FlexContainer>\n  );\n};\n\nexport default InputGroupButton;\n","import styled from 'styled-components';\nimport Typography from 'components/common/Typography';\nimport Container from '../Container';\n\nexport const FlexContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: ${props => props.theme.colors.lighGrey};\n  gap: 30px;\n  text-align: center;\n\n  @media (min-width: 576px) {\n    flex-direction: row;\n    text-align: start;\n  }\n`;\n\nexport const Column = styled.div`\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Center = styled.div`\n  width: fit-content;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const SocialMedia = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  gap: 8px;\n  justify-content: center;\n\n  @media (min-width: 576px) {\n    justify-content: start;\n  }\n`;\n\nexport const Title = styled(Typography).attrs(() => ({\n  variant: 'subtitle1',\n  fontSize: '18px',\n}))``;\n\nexport const Text = styled(Typography).attrs(() => ({\n  fontSize: '15px',\n}))``;\n","import React, { FormEvent, useState } from 'react';\n\nimport SendIcon from 'assets/images/send.svg';\nimport COMPANY_INFORMATION from 'constants/companyInformation';\nimport PROFILE_INFORMATION from 'constants/profileInformation';\nimport InputGroupButton from 'components/common/InputGroupButton';\n\nimport {\n  Center,\n  FlexContainer,\n  Column,\n  SocialMedia,\n  Text,\n  Title,\n} from './styles';\n\nconst Footer = (): React.ReactElement => {\n  const [emailToSubscribe, setEmailToSubscribe] = useState<string>('');\n\n  const handleEmailChange = (event: FormEvent<HTMLInputElement>) => {\n    const { value } = event.target as HTMLInputElement;\n    setEmailToSubscribe(value);\n  };\n\n  const handleSubscribe = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (emailToSubscribe) {\n      alert(`${emailToSubscribe} has been subscribed. :)`);\n      setEmailToSubscribe('');\n    } else {\n      alert(`Add an email to subscribe. ;)`);\n    }\n  };\n\n  return (\n    <FlexContainer as=\"footer\">\n      <Column as=\"article\">\n        <Center>\n          <Title margin={{ bottom: '20px' }}>About page</Title>\n          <Text>Play tic tac toe</Text>\n          <Text margin={{ top: '10px' }}>\n            Created by {PROFILE_INFORMATION.name}\n          </Text>\n        </Center>\n      </Column>\n\n      <Column as=\"article\">\n        <Center>\n          <Title margin={{ bottom: '20px' }}>Contacts</Title>\n          <Text>{COMPANY_INFORMATION.phone}</Text>\n          <Text margin={{ top: '10px' }}>{COMPANY_INFORMATION.address}</Text>\n        </Center>\n      </Column>\n\n      <Column as=\"article\">\n        <Center>\n          <Title margin={{ bottom: '12px' }}>Stay in touch</Title>\n\n          <SocialMedia>\n            {COMPANY_INFORMATION.socialMedia.map(media => (\n              <a\n                key={media.name}\n                href={media.url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <img\n                  src={media.logo}\n                  alt={`${media.name} logo`}\n                  height=\"22px\"\n                />\n              </a>\n            ))}\n          </SocialMedia>\n\n          <form onSubmit={handleSubscribe}>\n            <InputGroupButton\n              inputProps={{\n                type: 'email',\n                width: '150px',\n                placeholder: 'Subscribe our games',\n                value: emailToSubscribe,\n                onChange: handleEmailChange,\n              }}\n              buttonProps={{\n                type: 'submit',\n                children: <img src={SendIcon} alt=\"Send icon\" height=\"12px\" />,\n                backgroundColor: emailToSubscribe.length > 0 ? 'blue' : 'grey',\n              }}\n            />\n          </form>\n        </Center>\n      </Column>\n    </FlexContainer>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\nimport Container from 'components/layout/Container';\nimport Typography from 'components/common/Typography';\n\nexport const FlexContainer = styled(Container)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Column1 = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  gap: 26px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    text-align: start;\n  }\n`;\n\nexport const Column2 = styled.div`\n  flex: 1;\n  display: none;\n\n  @media (min-width: 768px) {\n    display: block;\n  }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  height: 120px;\n  width: 120px;\n`;\n\nexport const SpacedText = styled(Typography).attrs(() => ({\n  lineHeight: 'spaced',\n}))``;\n","import React from 'react';\n\nimport PROFILE_INFORMATION from 'constants/profileInformation';\nimport { FlexContainer, Column1, Column2, Avatar, SpacedText } from './styles';\n\nconst ProfileSection = (): React.ReactElement => {\n  return (\n    <FlexContainer as=\"section\">\n      <Column1 as=\"article\">\n        <Avatar\n          src={PROFILE_INFORMATION.photo}\n          alt={`${PROFILE_INFORMATION.name}'s photo`}\n        />\n\n        <div>\n          <SpacedText variant=\"subtitle1\" fontSize=\"30px\" fontStyle=\"bold\">\n            {PROFILE_INFORMATION.name}\n          </SpacedText>\n\n          <SpacedText>Age: {PROFILE_INFORMATION.age}</SpacedText>\n          <SpacedText>Location: {PROFILE_INFORMATION.location}</SpacedText>\n          <SpacedText>Ocupation: {PROFILE_INFORMATION.ocupation}</SpacedText>\n\n          <SpacedText>\n            LinkedIn:{' '}\n            <a\n              href={PROFILE_INFORMATION.linkedIn.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {PROFILE_INFORMATION.linkedIn.name}\n            </a>\n          </SpacedText>\n        </div>\n      </Column1>\n\n      <Column2 as=\"article\">\n        <SpacedText textAlign=\"end\" fontSize=\"18px\">\n          About me:\n        </SpacedText>\n\n        {PROFILE_INFORMATION.about.split('\\n').map(\n          paragraph =>\n            paragraph && (\n              <SpacedText\n                key={paragraph.substring(10)}\n                textAlign=\"end\"\n                margin={{ top: '6px' }}\n              >\n                {paragraph}\n              </SpacedText>\n            ),\n        )}\n      </Column2>\n    </FlexContainer>\n  );\n};\n\nexport default ProfileSection;\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { createContext, useContext } from 'react';\n\nexport interface GameInfo {\n  winnersPerMatch: PlayerOption[];\n  scoreBoard: ScoreBoard;\n  totalSeconds: number;\n}\nexport type PlayerOption = 'P1' | 'P2' | 'tie';\nexport interface ScoreBoard {\n  P1: number;\n  P2: number;\n  tie: number;\n}\n\nexport type GameHistoryContextProps = {\n  info: GameInfo;\n  setInfo: (gameInfo: GameInfo) => void;\n  resetContext: () => void;\n};\n\nexport const GameHistoryContext = createContext<GameHistoryContextProps>({\n  info: {\n    winnersPerMatch: [],\n    scoreBoard: { P1: 0, P2: 0, tie: 0 },\n    totalSeconds: 0,\n  },\n  setInfo: () => {},\n  resetContext: () => {},\n});\n\nexport const useGameHistory = (): GameHistoryContextProps => {\n  return useContext<GameHistoryContextProps>(GameHistoryContext);\n};\n","export default __webpack_public_path__ + \"static/media/X_dark.6a416e49.svg\";","export default __webpack_public_path__ + \"static/media/O_dark.63547981.svg\";","const toHHMMSS = (totalSeconds: number): string => {\n  const hourCounter = Math.floor(totalSeconds / 3600);\n  const minuteCounter = Math.floor((totalSeconds % 3600) / 60);\n  const secondCounter = Math.floor((totalSeconds % 3600) % 60);\n\n  const hours = hourCounter < 10 ? `0${hourCounter}` : String(hourCounter);\n  const minutes =\n    minuteCounter < 10 ? `0${minuteCounter}` : String(minuteCounter);\n  const seconds =\n    secondCounter < 10 ? `0${secondCounter}` : String(secondCounter);\n\n  return `${hours}:${minutes}:${seconds}`;\n};\n\nexport default { toHHMMSS };\n","export default __webpack_public_path__ + \"static/media/X_bright.156f864c.svg\";","export default __webpack_public_path__ + \"static/media/O_bright.e3966c34.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport XDarkIcon from 'assets/images/X_dark.svg';\nimport ODarkIcon from 'assets/images/O_dark.svg';\nimport XBrightIcon from 'assets/images/X_bright.svg';\nimport OBrightIcon from 'assets/images/O_bright.svg';\nimport ValueOption from './types';\n\ninterface SquareProps {\n  value: ValueOption;\n  disabled?: boolean;\n  isHighlighted?: boolean;\n  onClick: () => void;\n}\n\nexport const Container = styled.button<{ isHighlighted?: boolean }>`\n  width: 50px;\n  height: 50px;\n  background-color: ${props =>\n    props.isHighlighted ? props.theme.colors.newGrey : undefined};\n`;\n\nconst Square = (props: SquareProps): React.ReactElement => {\n  const { value, disabled, isHighlighted, onClick } = props;\n\n  return (\n    <Container\n      isHighlighted={isHighlighted}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {value === ValueOption.X && (\n        <img src={isHighlighted ? XBrightIcon : XDarkIcon} alt=\"X\" />\n      )}\n      {value === ValueOption.O && (\n        <img src={isHighlighted ? OBrightIcon : ODarkIcon} alt=\"O\" />\n      )}\n    </Container>\n  );\n};\n\nexport default Square;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { PlayerOption, useGameHistory } from 'context/GameHistoryContext';\nimport Square from './Square';\nimport ValueOption from './types';\n\ninterface TicTacToeProps {\n  newGame: boolean;\n  gridSize: number;\n  setIsPlaying: (isPlaying: boolean) => void;\n}\n\nexport const Grid = styled.div<{ size: number }>`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 50px);\n`;\n\nconst TicTacToe = (props: TicTacToeProps): React.ReactElement => {\n  const gameHistoryContext = useGameHistory();\n  const { newGame, gridSize, setIsPlaying } = props;\n\n  const [grid, setGrid] = useState<ValueOption[][]>([]);\n  const [currentValue, setCurrentValue] = useState<ValueOption>(ValueOption.X);\n  const [winningMove, setWinningMove] =\n    useState<{\n      rowPosition: number | undefined;\n      columnPosition: number | undefined;\n      direction: 'row' | 'column' | 'diagonal1' | 'diagonal2' | undefined;\n    }>();\n\n  const counter = useRef<number>(0);\n\n  const clearGame = () => {\n    setGrid(new Array(gridSize).fill(new Array(gridSize).fill(undefined)));\n    setCurrentValue(ValueOption.X);\n    setWinningMove(undefined);\n    counter.current = 0;\n  };\n\n  useEffect(() => {\n    clearGame();\n  }, [gridSize]);\n\n  useEffect(() => {\n    if (newGame) {\n      clearGame();\n    }\n  }, [newGame]);\n\n  const endMatch = (value: ValueOption | undefined) => {\n    let winner: PlayerOption;\n    let message = `Match ${\n      gameHistoryContext.info.winnersPerMatch.length + 1\n    }: `;\n\n    if (value === ValueOption.X) {\n      winner = 'P1';\n      message += 'player 1 wins! ;)';\n    } else if (value === ValueOption.O) {\n      winner = 'P2';\n      message += 'player 2 wins! ;)';\n    } else {\n      winner = 'tie';\n      message += \"it's a tie! :/\";\n    }\n    setTimeout(() => {\n      alert(message);\n    }, 500);\n\n    gameHistoryContext.setInfo({\n      ...gameHistoryContext.info,\n      winnersPerMatch: [...gameHistoryContext.info.winnersPerMatch, winner],\n      scoreBoard: {\n        ...gameHistoryContext.info.scoreBoard,\n        [winner]: gameHistoryContext.info.scoreBoard[winner] + 1,\n      },\n    });\n  };\n\n  const calculateCurrentResult = (\n    rowPosition: number,\n    columnPosition: number,\n  ) => {\n    const square = grid[rowPosition][columnPosition];\n    let matchOver = false;\n    let checkRows = 0;\n    let checkColumns = 0;\n    let checkDiagonal1 = 0;\n    let checkDiagonal2 = 0;\n\n    for (let i = 0; i < gridSize; i += 1) {\n      checkRows += grid[rowPosition][i] === square ? 1 : 0;\n      checkColumns += grid[i][columnPosition] === square ? 1 : 0;\n\n      if (rowPosition === columnPosition) {\n        checkDiagonal1 += grid[i][i] === square ? 1 : 0;\n      }\n      if (rowPosition + columnPosition === gridSize - 1) {\n        checkDiagonal2 += grid[i][gridSize - i - 1] === square ? 1 : 0;\n      }\n\n      // Match won\n      const winningDirection =\n        (checkRows === gridSize && 'row') ||\n        (checkColumns === gridSize && 'column') ||\n        (checkDiagonal1 === gridSize && 'diagonal1') ||\n        (checkDiagonal2 === gridSize && 'diagonal2') ||\n        undefined;\n\n      if (winningDirection) {\n        matchOver = true;\n\n        setWinningMove({\n          direction: winningDirection,\n          rowPosition,\n          columnPosition,\n        });\n\n        setIsPlaying(false);\n        endMatch(square);\n        break;\n      }\n    }\n\n    // Match tied\n    if (!matchOver && counter.current === gridSize ** 2) {\n      setIsPlaying(false);\n      endMatch(undefined);\n    }\n  };\n\n  const handleSquareClick = (rowPosition: number, columnPosition: number) => {\n    if (!grid[rowPosition][columnPosition]) {\n      counter.current += 1;\n\n      // In short, grid[rowPosition][columnPosition] = currentValue\n      const row = [...grid[rowPosition]];\n      row[columnPosition] = currentValue;\n      grid[rowPosition] = row;\n\n      setGrid(grid);\n      setCurrentValue(\n        currentValue === ValueOption.X ? ValueOption.O : ValueOption.X,\n      );\n\n      calculateCurrentResult(rowPosition, columnPosition);\n    }\n  };\n\n  const isSquareHighlighted = (rowPosition: number, columnPosition: number) => {\n    if (!winningMove) {\n      return false;\n    }\n    switch (winningMove?.direction) {\n      case 'row':\n        return rowPosition === winningMove.rowPosition;\n      case 'column':\n        return columnPosition === winningMove.columnPosition;\n      case 'diagonal1':\n        return rowPosition === columnPosition;\n      case 'diagonal2':\n        return (\n          rowPosition + columnPosition ===\n          (winningMove.rowPosition || 0) + (winningMove.columnPosition || 0)\n        );\n      default:\n        return false;\n    }\n  };\n\n  return (\n    <Grid size={gridSize}>\n      {grid.map((row, rowPosition) =>\n        row.map((square, columnPosition) => (\n          <Square\n            key={`${rowPosition + columnPosition}`}\n            value={square}\n            disabled={!newGame}\n            isHighlighted={isSquareHighlighted(rowPosition, columnPosition)}\n            onClick={() => handleSquareClick(rowPosition, columnPosition)}\n          />\n        )),\n      )}\n    </Grid>\n  );\n};\n\nexport default TicTacToe;\n","import styled from 'styled-components';\n\nimport LayoutContainer from 'components/layout/Container';\nimport Typography from 'components/common/Typography';\n\nexport const Container = styled(LayoutContainer)`\n  background-color: ${props => props.theme.colors.lighGrey};\n  text-align: center;\n`;\n\nexport const Block = styled.div<{ order: number }>`\n  @media (max-width: 800px) {\n    order: ${props => props.order};\n  }\n`;\n\nexport const PlayersArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-flow: wrap;\n  align-items: center;\n  justify-content: center;\n  margin-top: 26px;\n  gap: 50px;\n\n  @media (max-width: 800px) {\n    flex-direction: row;\n    column-gap: 30px;\n  }\n\n  @media (max-width: 400px) {\n    column-gap: 0;\n  }\n`;\n\nexport const GameArea = styled(Block)`\n  height: 450px;\n  width: 450px;\n  background-color: ${props => props.theme.colors.white};\n  border: solid 1px ${props => props.theme.colors.grey};\n\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n  }\n\n  @media (max-width: 500px) {\n    height: 300px;\n    width: 300px;\n  }\n`;\n\nexport const TimerArea = styled(Block)`\n  flex-basis: 100%;\n\n  @media (max-width: 800px) {\n    flex-basis: 0;\n    min-width: 90px;\n  }\n`;\n\nexport const Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n\n  @media (max-width: 500px) {\n    transform: scale(0.66);\n  }\n`;\n\nexport const Playing = styled.div`\n  margin-top: 10px;\n`;\n\nexport const Title = styled(Typography).attrs(() => ({\n  variant: 'title',\n  fontSize: '24px',\n  fontStyle: 'bold',\n}))``;\n\nexport const PlayerLabel = styled(Typography).attrs(() => ({\n  variant: 'subtitle1',\n  fontSize: '22px',\n  fontStyle: 'bold',\n}))``;\n\nexport const PlayerScoreValue = styled(Typography).attrs(() => ({\n  variant: 'subtitle2',\n  fontSize: '40px',\n  fontStyle: 'bold',\n  margin: { top: '10px' },\n}))``;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport XDarkIcon from 'assets/images/X_dark.svg';\nimport ODarkIcon from 'assets/images/O_dark.svg';\n\nimport TimeHelper from 'helpers/timeHelper';\nimport { useGameHistory } from 'context/GameHistoryContext';\n\nimport Typography from 'components/common/Typography';\nimport Button from 'components/common/Button';\nimport TicTacToe from './TicTacToe';\nimport {\n  Container,\n  Block,\n  PlayersArea,\n  GameArea,\n  TimerArea,\n  Center,\n  Playing,\n  Title,\n  PlayerLabel,\n  PlayerScoreValue,\n} from './styles';\n\ninterface GameSectionProps {\n  resetNextMatch: boolean;\n}\n\nconst GAME_INFO = {\n  0: {\n    name: '3x3',\n    gridSize: 3,\n  },\n  1: {\n    name: '6x6',\n    gridSize: 6,\n  },\n  2: {\n    name: '9x9',\n    gridSize: 9,\n  },\n};\ntype GameId = keyof typeof GAME_INFO;\n\nconst GameSection = (props: GameSectionProps): React.ReactElement => {\n  const gameHistoryContext = useGameHistory();\n  const { resetNextMatch } = props;\n  const initialTimer = '00:00:00';\n\n  const [selectedGame, setSelectedGame] = useState<GameId>(0);\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const [timer, setTimer] = useState<string>(initialTimer);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const counterRef = useRef<number>(0);\n\n  useEffect(() => {\n    if (isPlaying) {\n      setTimer(initialTimer);\n\n      counterRef.current = 0;\n      intervalRef.current = setInterval(() => {\n        counterRef.current += 1;\n        setTimer(TimeHelper.toHHMMSS(counterRef.current));\n      }, 1000);\n    } else {\n      if (counterRef.current) {\n        gameHistoryContext.setInfo({\n          ...gameHistoryContext.info,\n          totalSeconds: (gameHistoryContext.info.totalSeconds +\n            counterRef.current) as number,\n        });\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current as NodeJS.Timeout);\n      }\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    return () => clearInterval(intervalRef.current as NodeJS.Timeout);\n  }, []);\n\n  const startMatch = () => {\n    if (resetNextMatch) {\n      gameHistoryContext.resetContext();\n    }\n    setIsPlaying(true);\n  };\n\n  const renderGameTab = (gameId: GameId) => {\n    const game = GAME_INFO[gameId];\n    return (\n      <Button\n        selected={selectedGame === gameId}\n        onClick={() => {\n          setIsPlaying(false);\n          setSelectedGame(gameId);\n        }}\n      >\n        {selectedGame === gameId ? 'Tic Tac Toe' : 'TTT'} {game.name}\n      </Button>\n    );\n  };\n\n  return (\n    <Container as=\"section\">\n      <Title>Tic Tac Toe Games</Title>\n\n      <Typography margin={{ top: '14px', bottom: '26px' }}>\n        Welcome to the best game in the world!\n      </Typography>\n\n      <div>\n        {renderGameTab(0)}\n        {renderGameTab(1)}\n        {renderGameTab(2)}\n      </div>\n\n      <Playing>\n        {isPlaying ? (\n          <Typography fontColor=\"red\" margin={{ top: '20px', bottom: '32px' }}>\n            PLAYING...\n          </Typography>\n        ) : (\n          <Button\n            backgroundColor=\"green\"\n            disabled={isPlaying}\n            onClick={startMatch}\n          >\n            START!\n          </Button>\n        )}\n      </Playing>\n\n      <PlayersArea>\n        <Block order={2}>\n          <PlayerLabel>Player 1</PlayerLabel>\n          <PlayerScoreValue>\n            {gameHistoryContext.info.scoreBoard.P1}\n            <img src={XDarkIcon} alt=\"X\" height=\"12px\" />\n          </PlayerScoreValue>\n        </Block>\n\n        <GameArea order={1}>\n          <Center>\n            <TicTacToe\n              newGame={isPlaying}\n              gridSize={GAME_INFO[selectedGame].gridSize}\n              setIsPlaying={setIsPlaying}\n            />\n          </Center>\n        </GameArea>\n\n        <Block order={4}>\n          <PlayerLabel>Player 2</PlayerLabel>\n          <PlayerScoreValue>\n            {gameHistoryContext.info.scoreBoard.P2}\n            <img src={ODarkIcon} alt=\"O\" height=\"12px\" />\n          </PlayerScoreValue>\n        </Block>\n\n        <TimerArea order={3}>\n          <Typography variant=\"subtitle2\" fontSize=\"22px\">\n            {timer}\n          </Typography>\n        </TimerArea>\n      </PlayersArea>\n    </Container>\n  );\n};\n\nexport default GameSection;\n","import styled from 'styled-components';\nimport { ThemeColors } from 'theme';\nimport LayoutContainer from 'components/layout/Container';\nimport Typography from 'components/common/Typography';\n\nexport const Container = styled(LayoutContainer)`\n  background-color: ${props => props.theme.colors.white};\n  text-align: center;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 6px;\n`;\n\nexport const GameHistory = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: wrap;\n  align-items: center;\n  justify-content: space-evenly;\n\n  margin-bottom: 50px;\n  gap: 30px;\n  text-align: center;\n\n  & > div:nth-child(2) {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const PlayersInfo = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  gap: 24px;\n\n  & > div > div {\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nexport const Title = styled(Typography).attrs(() => ({\n  variant: 'subtitle1',\n  fontSize: '24px',\n  fontStyle: 'bold',\n}))``;\n\nexport const Subtitle = styled(Typography).attrs(() => ({\n  variant: 'subtitle2',\n  fontSize: '20px',\n  fontStyle: 'bold',\n  margin: { bottom: '16px' },\n}))``;\n\nexport const PlayerLabel = styled(Typography).attrs(() => ({\n  fontSize: '18px',\n  margin: { bottom: '8px' },\n}))``;\n\nexport const PlayerPercentage = styled(Typography).attrs(() => ({\n  fontColor: 'white',\n  fontStyle: 'bold',\n}))``;\n\nexport const VL = styled(Typography).attrs(() => ({\n  fontSize: '12px',\n  margin: { top: '8px' },\n}))``;\n\nexport const Bagde = styled.div<{ backgroundColor: ThemeColors }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 40px;\n  width: 40px;\n  background-color: ${props => props.theme.colors[props.backgroundColor]};\n  border-radius: 50%;\n`;\n\nexport const CheckMark = styled.div<{ checked: boolean }>`\n  height: 16px;\n  width: 16px;\n  background-color: ${props =>\n    props.theme.colors[props.checked ? 'newGrey' : 'white']};\n  border: solid 1px ${props => props.theme.colors.newGrey};\n  border-radius: 50%;\n`;\n\nexport const Square = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 26px;\n  width: 26px;\n  border: solid 1px ${props => props.theme.colors.newGrey};\n`;\n","import React, { useEffect, useState } from 'react';\n\nimport { ThemeColors } from 'theme';\nimport { MAX_MATCHS } from 'constants/game';\nimport TimeHelper from 'helpers/timeHelper';\n\nimport { PlayerOption, useGameHistory } from 'context/GameHistoryContext';\nimport Typography from 'components/common/Typography';\nimport {\n  Container,\n  Flex,\n  GameHistory,\n  PlayersInfo,\n  Title,\n  Subtitle,\n  PlayerLabel,\n  PlayerPercentage,\n  VL,\n  Bagde,\n  CheckMark,\n  Square,\n} from './styles';\n\nconst GameStatisticsSection = React.forwardRef<HTMLElement>((props, ref) => {\n  const gameHistoryContext = useGameHistory();\n  const matchsCounter = gameHistoryContext.info.winnersPerMatch.length;\n\n  const [playedMatchs, setPlayedMatchs] = useState<boolean[]>(\n    new Array(MAX_MATCHS).fill(false),\n  );\n  const [winners, setWinners] = useState<string[]>(\n    new Array(MAX_MATCHS).fill(undefined),\n  );\n\n  useEffect(() => {\n    setPlayedMatchs(\n      playedMatchs.map((checked, index) => index < matchsCounter),\n    );\n    setWinners(\n      winners.map(\n        (winner, index) => gameHistoryContext.info.winnersPerMatch[index],\n      ),\n    );\n  }, [gameHistoryContext.info.winnersPerMatch]);\n\n  const calculateVictoriesPercentage = (player: PlayerOption) => {\n    if (matchsCounter) {\n      return (gameHistoryContext.info.scoreBoard[player] / matchsCounter) * 100;\n    }\n    return 0;\n  };\n\n  const renderPercentageBadge = (\n    player: PlayerOption,\n    isVictoryBadge?: boolean,\n  ) => {\n    const victoriesPercentage = calculateVictoriesPercentage(player);\n    let backgroundColor: ThemeColors = 'newGrey';\n\n    const oneThird = 100 / 3;\n    if (matchsCounter > 0 && isVictoryBadge) {\n      if (victoriesPercentage <= oneThird) {\n        backgroundColor = 'red';\n      } else if (victoriesPercentage >= 2 * oneThird) {\n        backgroundColor = 'green';\n      } else {\n        backgroundColor = 'yellow';\n      }\n    }\n\n    return (\n      <>\n        <Bagde backgroundColor={backgroundColor}>\n          <PlayerPercentage>\n            {Math.floor(victoriesPercentage)}%\n          </PlayerPercentage>\n        </Bagde>\n        {isVictoryBadge === true && <VL>V</VL>}\n        {isVictoryBadge === false && <VL>F</VL>}\n      </>\n    );\n  };\n\n  return (\n    <Container as=\"section\" ref={ref}>\n      <Title>Awesome Statistics</Title>\n\n      <Typography margin={{ top: '14px', bottom: '60px' }}>\n        All statistics in one place...\n      </Typography>\n\n      <GameHistory>\n        <div>\n          <Subtitle>Game victories %</Subtitle>\n\n          <PlayersInfo>\n            <div>\n              <PlayerLabel>Player 1</PlayerLabel>\n              <div>\n                <div>{renderPercentageBadge('P1', true)}</div>\n                <div>{renderPercentageBadge('P2', false)}</div>\n              </div>\n            </div>\n\n            <div>\n              <PlayerLabel>Player 2</PlayerLabel>\n              <div>\n                <div>{renderPercentageBadge('P2', true)}</div>\n                <div>{renderPercentageBadge('P1', false)}</div>\n              </div>\n            </div>\n\n            <div>\n              <PlayerLabel>Ties</PlayerLabel>\n              <div>{renderPercentageBadge('tie')}</div>\n            </div>\n          </PlayersInfo>\n        </div>\n\n        <div>\n          <div>\n            <Subtitle>Played matchs</Subtitle>\n            <Flex>\n              {playedMatchs.map((checked, index) => (\n                <CheckMark key={index} checked={checked} />\n              ))}\n            </Flex>\n          </div>\n\n          <div>\n            <Subtitle>Game history</Subtitle>\n            <Flex>\n              {winners.map((winner, index) => (\n                <Square key={index}>\n                  <Typography>{winner}</Typography>\n                </Square>\n              ))}\n            </Flex>\n          </div>\n        </div>\n      </GameHistory>\n\n      <div>\n        <Subtitle>Total time</Subtitle>\n        <Typography fontSize=\"22px\">\n          {TimeHelper.toHHMMSS(gameHistoryContext.info.totalSeconds)}\n        </Typography>\n      </div>\n    </Container>\n  );\n});\n\nexport default GameStatisticsSection;\n","export const MAX_MATCHS = 9;\nexport const MAX_VICTORIES = 5;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { MAX_MATCHS, MAX_VICTORIES } from 'constants/game';\nimport { GameHistoryContext, GameInfo } from 'context/GameHistoryContext';\n\nimport GameSection from './GameSection';\nimport GameStatisticsSection from './GameStatisticsSection';\n\nconst GameEnvironment = (): React.ReactElement => {\n  const newGameHistory = {\n    winnersPerMatch: [],\n    scoreBoard: {\n      P1: 0,\n      P2: 0,\n      tie: 0,\n    },\n    totalSeconds: 0,\n  };\n  const [gameHistory, setGameHistory] = useState<GameInfo>(newGameHistory);\n  const [resetNextMatch, setResetNextMatch] = useState<boolean>(false);\n\n  const statisticsSectionRef = useRef<HTMLElement>(null);\n\n  const endGame = () => {\n    setResetNextMatch(true);\n\n    let message = 'Game over!';\n    if (gameHistory.scoreBoard.P1 === MAX_VICTORIES) {\n      message += '\\nCongrats, player 1, you won the game! \\\\o/';\n    } else if (gameHistory.scoreBoard.P2 === MAX_VICTORIES) {\n      message += '\\nCongrats, player 2, you won the game! \\\\o/';\n    } else if (gameHistory.winnersPerMatch.length === MAX_MATCHS) {\n      message += ' Oh, it tied! :(\\nPlay again...';\n    }\n\n    setTimeout(() => {\n      alert(message);\n      statisticsSectionRef?.current?.scrollIntoView();\n    }, 500);\n  };\n\n  useEffect(() => {\n    setResetNextMatch(false);\n    if (\n      gameHistory.winnersPerMatch.length === MAX_MATCHS ||\n      gameHistory.scoreBoard.P1 === MAX_VICTORIES ||\n      gameHistory.scoreBoard.P2 === MAX_VICTORIES\n    ) {\n      endGame();\n    }\n  }, [gameHistory.scoreBoard]);\n\n  return (\n    <main>\n      <GameHistoryContext.Provider\n        value={{\n          info: gameHistory,\n          setInfo: setGameHistory,\n          resetContext: () => setGameHistory(newGameHistory),\n        }}\n      >\n        <GameSection resetNextMatch={resetNextMatch} />\n        <GameStatisticsSection ref={statisticsSectionRef} />\n      </GameHistoryContext.Provider>\n    </main>\n  );\n};\n\nexport default GameEnvironment;\n","import React from 'react';\n\nimport Header from 'components/layout/Header';\nimport Footer from 'components/layout/Footer';\nimport ProfileSection from 'components/home/ProfileSection';\nimport GameEnvironment from 'components/home/GameEnvironment';\n\nconst Home = (): React.ReactElement => {\n  return (\n    <>\n      <Header />\n      <ProfileSection />\n      <GameEnvironment />\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport defaultTheme from 'theme';\nimport GlobalStyle from 'styles';\nimport Home from './Home';\n\nconst App = (): React.ReactElement => {\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <GlobalStyle />\n      <Home />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'pages/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}